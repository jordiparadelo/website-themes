#Categories[data-version="1"] {
  --gap: max(var(--spacing-xxl), 5vw);
  --sectionBackground: var(--lightColor);
  display: flex;
  flex-direction: row-reverse;
  flex-wrap: wrap;
  gap: var(--gap);
  height: 100vh;
  padding: var(--spacing-xl);
  align-items: stretch;
  overflow: hidden;
  background-color: var(--sectionBackground);

  > * {
    max-height: 100%;
    flex-grow: 1;
    flex-basis: 32ch;
  }

  // Header
  .header {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: var(--spacing-xxl);

    .header_title {
      --fontSize: max(3vw, 40px);
      font-size: var(--fontSize);
      display: flex;
      flex-direction: column;
      flex-grow: 1;

      span {
        font-size: min(12px, 0.6em);
        text-transform: uppercase;
        line-height: 1;
      }
      h2 {
        font-size: 1em;
      }
    }

    // Category List
    .category-list {
      --fontSize: max(20px, 1.5vw);
      display: flex;
      flex-direction: column;
      font-size: var(--fontSize);

      .category_item {
        --indicatorStroke: 1px;
        --indicatorColor: var(--hoverColor);
        --indicatorColorActive: var(--primaryColor);

        min-height: max(32px, 2em);
        display: flex;
        align-items: center;
        position: relative;
        justify-content: space-between;
        gap: var(--spacing);
        color: inherit;

        // Border Indicator
        &:before,
        &:after {
          content: "";
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
          height: var(--indicatorStroke);
          width: 100%;
          transition: width 0.5s var(--ease);
          background-color: var(--primaryColor);
          transition: width 1s var(--ease);
        }
        &:before {
          opacity: 0.2;
        }

        // Category Item States
        &:not(:hover, :focus-visible) {
          &:after {
            width: 0;
          }
        }
      }
      // Category List States
      &:hover {
        // Set opacity to all childs except for the hover/focused
        > *:not(:hover, :focus-visible) {
          opacity: 0.3;
        }
      }
    }
  }

  // Image Grid
  .images-grid {
    --gap: var(--spacing);
    flex-grow: 1;
    display: grid;
    gap: var(--gap);
    grid-template-columns: 1fr 1fr;
    grid-auto-flow: row;
    overflow: hidden;
    align-content: center;
    position: relative;
    overflow: hidden;
    max-height: 100%;

    .grid_image {
      --maxSize: 55vh;
      --size: max(300px, var(--maxSize));
      display: flex;
      align-items: stretch;
      justify-content: stretch;
      border-radius: var(--corners);
      overflow: hidden;
      min-height: var(--size);

      > picture {
        flex-grow: 1;
        max-width: 100%;

        img {
          flex-grow: 1;
          min-width: 100%;
          min-height: 100%;
          object-fit: cover;
          max-width: 100%;
        }
      }

      // imagenes pares
      &:nth-child(odd) {
        grid-row: 8 span;
      }
    }
    // Gradients TOP & BOTTOM
    &:before,
    &:after {
      --deg: "#";
      --gradient: linear-gradient(
        var(--deg),
        var(--sectionBackground, white),
        transparent
      );
      content: "";
      height: 25%;
      position: absolute;
      background: var(--gradient);
      left: 0;
      right: 0;
    }

    &:before {
      --deg: 180deg;
      top: 0;
    }
    &:after {
      --deg: 0deg;
      bottom: 0;
    }
  }
}
